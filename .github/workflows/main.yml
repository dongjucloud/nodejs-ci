name: CI/CD Pipeline

on:
  push:
    branches:
      - master
    tags:
      - 'v*' # v로 시작하는 태그에 대해 동작

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Extract Version Information
        id: extract_version_name
        run: echo "##[set-output name=version;]$(echo '${{ github.event.head_commit.message }}' | egrep -o '[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}')"
      - name: Create Release
        uses: actions/create-release@v1
        with: 
          tag_name: ${{ steps.extract_version_name.outputs.version }} 
          release_name: ${{ steps.extract_version_name.outputs.version }} 

  push_docker:
    runs-on: ubuntu-latest
    needs: release # 릴리즈 작업이 완료된 후 실행
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Docker meta
        id: docker_meta
        uses: crazy-max/ghaction-docker-meta@v1
        with:
          images: dongjukim123/nodejs-ci
          tag-semver: |
            {{version}}
            {{major}}.{{minor}}
            {{major}}.{{minor}}.{{patch}}
            latest
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_PASSWORD }}
      - name: Build and push Docker Image
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: ${{ steps.docker_meta.outputs.tags }}
          labels: ${{ steps.docker_meta.outputs.labels }}
